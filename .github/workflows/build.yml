name: Test and build data

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
permissions:
  contents: write
  pages: write
  id-token: write

on:
  push: 
    branches: ["main"]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo content
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          
      - name: Run tests and try and build project
        uses: ./.github/actions/in-dev-container
        with:
          run: |
            script/test
            dataset build --all
            dataset version auto --auto-ban major --all --publish
            
      - name: Push new data
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update repo data based on source changes"

      - name: Send GitHub Action trigger data to Slack workflow
        id: slack
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        uses: slackapi/slack-github-action@v1.19.0
        with:
          payload: |
            {
              "repo_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.HAPPY_DATABOT_SLACK_WEBHOOK }}     

      - name: Setup Pages
        uses: actions/configure-pages@v1

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: docs
          destination: docs/_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_site

      - name: Send GitHub Action trigger data to Slack workflow (if failed)
        if: ${{ failure() }}
        id: slack-failed
        uses: slackapi/slack-github-action@v1.19.0
        with:
          payload: |
            {
              "repo_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SAD_DATABOT_SLACK_WEBHOOK }}     


  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - uses: geekyeggo/delete-artifact@v4
        with:
          name: github-pages